{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Deco",
				"Decodable"
			],
			[
				"ARig",
				"ARightBot"
			],
			[
				"cle",
				"cleanup"
			],
			[
				"enter_",
				"enter_chunk"
			],
			[
				"create_",
				"create_reader"
			],
			[
				"AL_",
				"AL_FORMAT_MONO16"
			],
			[
				"get",
				"get_uint"
			],
			[
				"sou",
				"sound_source"
			],
			[
				"get_",
				"get_bytes"
			],
			[
				"cre",
				"create_buffer"
			],
			[
				"open",
				"open_chunk"
			],
			[
				"co",
				"content"
			],
			[
				"y_",
				"y_max"
			],
			[
				"up",
				"update_base"
			],
			[
				"ch",
				"child"
			],
			[
				"y_m",
				"y_max"
			],
			[
				"Frame",
				"Frame"
			],
			[
				"ATo",
				"ATopMid"
			],
			[
				"Font",
				"FontInfo"
			],
			[
				"glco",
				"glcore"
			],
			[
				"wrap",
				"wrap_modes"
			],
			[
				"test-",
				"test-image"
			],
			[
				"parse_a",
				"parse_anchor"
			],
			[
				"min",
				"min_size"
			],
			[
				"Re",
				"Relation"
			],
			[
				"ali",
				"align"
			],
			[
				"Rel",
				"RelParent"
			],
			[
				"A",
				"ACenter"
			],
			[
				"hud_",
				"hud_context"
			],
			[
				"c",
				"content"
			],
			[
				"to_",
				"to_matrix"
			],
			[
				"po",
				"point"
			],
			[
				"Ve",
				"Vec4"
			],
			[
				"en",
				"envir"
			],
			[
				"ent",
				"entry"
			],
			[
				"chi",
				"children"
			],
			[
				"tech",
				"techSolid"
			],
			[
				"w",
				"width"
			],
			[
				"b",
				"bytes"
			],
			[
				"di",
				"divide_group"
			],
			[
				"pri",
				"prime"
			],
			[
				"mate",
				"materials"
			],
			[
				"mater",
				"material"
			],
			[
				"mat",
				"material"
			],
			[
				"Materia",
				"MaterialInfo"
			],
			[
				"rotate",
				"rotate_camera"
			],
			[
				"expo",
				"export_meshes"
			],
			[
				"export_",
				"export_meshes"
			],
			[
				"proper",
				"properties"
			],
			[
				"read_key_ori",
				"read_key_orientation_euler"
			],
			[
				"make_",
				"make_nodes"
			],
			[
				"face",
				"face_num"
			],
			[
				"UniFlo",
				"UniFloatVec"
			],
			[
				"Te",
				"Texture"
			],
			[
				"Text",
				"TextureCache"
			],
			[
				"tex",
				"tex_unit"
			],
			[
				"f",
				"filter"
			],
			[
				"map_ma",
				"map_matererial_data"
			],
			[
				"De",
				"Deserializer"
			],
			[
				"dese",
				"deserialize"
			],
			[
				"creat",
				"create_data"
			],
			[
				"Mat",
				"Material"
			],
			[
				"Mater",
				"MaterialInfo"
			],
			[
				"Ent",
				"EntityGroup"
			],
			[
				"Entit",
				"EntityGroup"
			],
			[
				"spa",
				"spawn"
			],
			[
				"ma",
				"map_node"
			],
			[
				"du",
				"dual_quat"
			],
			[
				"Node",
				"NodeInfo"
			],
			[
				"Came",
				"Camera"
			],
			[
				"Camer",
				"CameraInfo"
			],
			[
				"Li",
				"LinearMap"
			],
			[
				"fo",
				"fov"
			],
			[
				"Proje",
				"ProjectorInfo"
			],
			[
				"Light",
				"LightInfo"
			],
			[
				"fov",
				"fov_y"
			],
			[
				"Pro",
				"Projector"
			],
			[
				"Cam",
				"CameraInfo"
			],
			[
				"No",
				"NodeInfo"
			],
			[
				"load_",
				"load_config"
			],
			[
				"min_",
				"min_y"
			],
			[
				"line",
				"line_gap"
			],
			[
				"line_",
				"line_number"
			],
			[
				"he",
				"height"
			],
			[
				"t_",
				"t_bubble"
			],
			[
				"pos",
				"pos_x"
			],
			[
				"Bubb",
				"Bubble"
			],
			[
				"Bubble",
				"BubbleManager"
			],
			[
				"Bubbl",
				"BubbleManager"
			],
			[
				"bubble",
				"bubble_param"
			],
			[
				"bub",
				"bubble_param"
			],
			[
				"windo",
				"window_size"
			],
			[
				"debug_",
				"debug_graphics"
			],
			[
				"wid",
				"width_capacity"
			],
			[
				"ba",
				"backup"
			],
			[
				"as",
				"ascender"
			],
			[
				"yp",
				"ypix"
			],
			[
				"mu",
				"mut_data"
			],
			[
				"sp",
				"space"
			],
			[
				"dei",
				"destination"
			],
			[
				"Quat",
				"QuatSpace"
			],
			[
				"stencil",
				"stencil_front"
			],
			[
				"stencil_",
				"stencil_back"
			],
			[
				"GL_TEXT",
				"GL_TEXTURE_2D"
			],
			[
				"GL_UN",
				"GL_UNSIGNED_INT"
			],
			[
				"GL_UNSI",
				"GL_UNSIGNED_BYTE"
			],
			[
				"is_in",
				"is_integer"
			],
			[
				"world",
				"world_space"
			],
			[
				"wor",
				"world_space"
			],
			[
				"to",
				"to_string"
			],
			[
				"create",
				"create_reader"
			],
			[
				"Qua",
				"Quaternion"
			],
			[
				"getFlo",
				"get_float"
			],
			[
				"Tech",
				"technique"
			],
			[
				"fro",
				"from_elem"
			],
			[
				"gl",
				"glcore"
			],
			[
				"BlenD",
				"BlendChannel"
			],
			[
				"de",
				"destination"
			],
			[
				"eq",
				"equation"
			],
			[
				"Blend",
				"BlendChannel"
			],
			[
				"glGet",
				"glGetBooleanv"
			],
			[
				"Tar",
				"TarEmpty"
			],
			[
				"Verte",
				"VertexData"
			],
			[
				"frame",
				"framebuffer_draw"
			],
			[
				"GL",
				"GL_RENDERBUFFER_BINDING"
			],
			[
				"unbind",
				"unbind_vertex_array"
			],
			[
				"Vertex",
				"VertexArray"
			],
			[
				"pool",
				"pool_programs"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/Users/kvark/Code/rust/claymore-game/game/scene.rs",
			"settings":
			{
				"buffer_size": 12522,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 203 files for \"Group size\" (whole word)\n\n/Users/kvark/Code/rust/claymore-game/game/main.rs:\n   73  	let mut group = scene::divide_group( &mut scene.entities, &~\"noTrasnform\" );\n   74  	let hair = scene::divide_group( &mut group, &~\"Hair_Geo2\" );\n   75: 	io::println(fmt!( \"Group size: %u\", group.len() ));\n   76  	io::println(fmt!( \"Camera fovx:%f,%f, range:%f-%f\",\n   77  		cam.proj.fov_x, cam.proj.fov_y, cam.proj.r_near, cam.proj.r_far ));\n\n1 match in 1 file\n\n\nSearching 203 files for \"println\" (whole word)\n\n/Users/kvark/Code/rust/claymore-game/engine/audio.rs:\n  131  	let name = str::from_bytes( rd.get_bytes(4) );\n  132  	let size = rd.get_uint(4);\n  133: 	io::println( ~\"\\tEntering \" + name );\n  134  	load::Chunk{\n  135  		name	: name,\n  ...\n  145  		size	: uint,\n  146  	};\n  147: 	io::println( ~\"Loading \" + path );\n  148  	let rd = load::create_reader_ext( path, read_wave_chunk );\n  149  	assert rd.enter() == ~\"RIFF\";\n  ...\n  157  	let _byte_align		= rd.get_uint(2);\n  158  	let bits_per_sample	= rd.get_uint(2);\n  159: 	io::println(fmt!( \"\\tformat:%u, channels:%u, sample_rate:%u, byte_rate:%u\",\n  160  		audio_format, channels, sample_rate, byte_rate ));\n  161  	let is_PCM = audio_format == 1u;\n\n/Users/kvark/Code/rust/claymore-game/engine/mesh.rs:\n   32  impl Attribute	{\n   33  	pure fn compatible( at : &shade::Attribute )-> bool	{\n   34: 		//io::println(fmt!( \"Checking compatibility: kind=0x%x, count=%u, storage=0x%x\",\n   35  		//	self.kind as uint, self.count, at.storage as uint ));\n   36  		let (count,unit) = at.decompose();\n   ..\n  193  		if !self.bind_program( prog, data )	{\n  194  			m.black_list.push( prog.handle );\n  195: 			io::println(fmt!( \"Unable to activate program #%d\", *prog.handle as int ));\n  196  			return false;\n  197  		}\n  ...\n  204  					if !sat.compatible(pat)	{\n  205  						m.black_list.push( prog.handle );\n  206: 						io::println(fmt!( \"Mesh attibute '%s' is incompatible with program #%d\",\n  207  							*name, *prog.handle as int ));\n  208  						return false;\n  ...\n  213  				None => {\n  214  					m.black_list.push( prog.handle );\n  215: 					io::println(fmt!( \"Mesh '%s' doesn't contain required attribute '%s', needed for program #%d\",\n  216  						m.name, *name, *prog.handle as int ));\n  217  					return false;\n\n/Users/kvark/Code/rust/claymore-game/engine/shade.rs:\n  389  					}\n  390  					if par.value != val	{\n  391: 						//io::println(fmt!( \"Uploading val '%s'\", *name ));\n  392  						par.value = val;\n  393  						par.write();\n\n/Users/kvark/Code/rust/claymore-game/engine/texture.rs:\n  286  			glcore::glGetIntegerv( query, ptr::addr_of(&id) );\n  287  			if *(*handle) != id as glcore::GLuint	{\n  288: 				io::println(\"bad2\");\n  289  				was_ok = false;\n  290  				self.active.swap( *slot, Handle(id as glcore::GLuint) );\n\n/Users/kvark/Code/rust/claymore-game/game/main.rs:\n  295  fn fail_GLFW( where: &static/str ) -> !	{\n  296  	let code = glfw3::get_error();\n  297: 	io::println(~\"GLFW error: \" + glfw3::error_string(code));\n  298  	glfw3::terminate();\n  299  	fail fmt!(\"glfw%s() failed\\n\",where)\n  ...\n  322  \n  323  fn main()	{\n  324: 	io::println(\"--- Claymore ---\");\n  325  	do task::task().sched_mode(task::PlatformThread).spawn {\n  326  		if (glfw3::init()==0)	{\n\n/Users/kvark/Code/rust/claymore-game/game/scene.rs:\n   14  \n   15  pub fn load_config<T:Decodable<json::Decoder>>( path : ~str )-> T	{\n   16: 	io::println( ~\"Loading config: \"+path );\n   17  	let rd = match io::file_reader(&path::Path(path))	{\n   18  		Ok(reader)	=> reader,\n   ..\n  241  		let v_z2 = m_vp_inv.rotate(&v_z1);\n  242  		let v_z3 = self.get_view_vector();\n  243: 		io::println(fmt!(\"** Vz2=%s, Vz3=%s **\",v_z2.to_string(),v_z3.to_string()));\n  244  		let v_y1 = Vec3::new(0f32,1f32,0f32);\n  245  		let v_y2 = m_vp_inv.rotate(&v_y1);\n  246  		let v_y3 = self.get_up_vector();\n  247: 		io::println(fmt!(\"** Vy2=%s, Vy3=%s **\",v_y2.to_string(),v_y3.to_string()));\n  248  		let v_x1 = Vec3::new(1f32,0f32,0f32);\n  249  		let v_x2 = m_vp_inv.rotate(&v_x1);\n  250  		let v_x3 = self.get_side_vector();\n  251: 		io::println(fmt!(\"** Vx2=%s, Vx3=%s **\",v_x2.to_string(),v_x3.to_string()));\n  252  		let v_d2 = v_x2.cross(&v_y2);\n  253  		let v_d3 = v_x3.cross(&v_y3);\n  254: 		io::println(fmt!(\"** Vd2=%s, Vd3=%s **\",v_d2.to_string(),v_d3.to_string()));\n  255: 		io::println(m_vp.to_string());\n  256: 		io::println(m_vp_inv.to_string());\n  257  		assert v_x2 == v_x3 && v_y2 == v_y3 && v_z2 == v_z3;\n  258  	}\n\n/Users/kvark/Code/rust/claymore-game/sample/demo03-materials.rs:\n  125  	// done\n  126  	ct.check(~\"init\");\n  127: 	io::println( fmt!(\"init: mesh %s, texture %u\",\n  128  		e1.mesh.name, *t_diffuse.handle as uint)\n  129  	);\n  ...\n  180  fn failGLFW( where: &static/str )	{\n  181  	let code = glfw3::get_error();\n  182: 	io::println(~\"GLFW error: \" + glfw3::error_string(code));\n  183  	glfw3::terminate();\n  184  	fail( fmt!(\"glfw%s() failed\\n\",where) );\n  ...\n  187  \n  188  fn main()	{\n  189: 	io::println(\"--- Claymore demo 03: materials ---\");\n  190  	do task::task().sched_mode(task::PlatformThread).spawn {\n  191  		if (glfw3::init()==0)	{\n\n/Users/kvark/Code/rust/claymore-game/sample/demo04-skeleton.rs:\n  107  	// done\n  108  	ct.check(~\"init\");\n  109: 	io::println(fmt!( \"init: mesh %s, texture %u\", entity.mesh.name, *tex.handle as uint ));\n  110  	Sample { context:ct, armature:armature, entity:entity, technique:tech, texture:tex,\n  111  		frames:0, action:@engine::anim::make_delay(1f) as @engine::anim::Act,\n  ...\n  166  fn failGLFW( where: &static/str )	{\n  167  	let code = glfw3::get_error();\n  168: 	io::println(~\"GLFW error: \" + glfw3::error_string(code));\n  169  	glfw3::terminate();\n  170  	fail( fmt!(\"glfw%s() failed\\n\",where) );\n  ...\n  173  \n  174  fn main()	{\n  175: 	io::println(\"--- Claymore ---\");\n  176  	do task::task().sched_mode(task::PlatformThread).spawn {\n  177  		if (glfw3::init()==0)	{\n\n/Users/kvark/Code/rust/claymore-game/sample/demo05-text.rs:\n  126  fn failGLFW( where: &static/str )	{\n  127  	let code = glfw3::get_error();\n  128: 	io::println(~\"GLFW error: \" + glfw3::error_string(code));\n  129  	glfw3::terminate();\n  130  	fail( fmt!(\"glfw%s() failed\\n\",where) );\n  ...\n  133  \n  134  fn main()	{\n  135: 	io::println(\"--- Claymore demo 04: text ---\");\n  136  	do task::task().sched_mode(task::PlatformThread).spawn {\n  137  		if (glfw3::init()==0)	{\n\n/Users/kvark/Code/rust/lmath-rs/src/test/performance/matrix_mul.rs:\n   69      let min = [mul_matrix_expanded_avg, mul_matrix_dot_product_avg].min();\n   70      \n   71:     io::println(fmt!(\"mul_matrix_expanded:       %d = %d\", mul_matrix_expanded_avg as int, (mul_matrix_expanded_avg - min) as int));\n   72:     io::println(fmt!(\"mul_matrix_dot_product:    %d = %d\", mul_matrix_dot_product_avg as int, (mul_matrix_dot_product_avg - min) as int));\n   73      \n   74  }\n\n/Users/kvark/Code/rust/lmath-rs/src/test/performance/vector_index_operator.rs:\n   62      \n   63      let vfield_avg = do test_avg_time_ns(n_tests) {\n   64:         // io::println(fmt!(\"[ %?, %?, %?, %? ]\", v.x, v.y, v.z, v.w));\n   65          assert(v.x == 1f);\n   66          assert(v.y == 2f);\n   ..\n   69      };\n   70      \n   71:     io::println(fmt!(\"Vector.x,y,z,w:      [%d]\", vfield_avg as int));\n   72      \n   73      let vmatch = VecMatch { x: 1f, y: 2f, z: 3f, w: 4f };\n   ..\n  109      let min = [vfield_avg, vindex_avg, vreint_avg, vtrans_avg, vbufslice_avg].min();\n  110      \n  111:     io::println(fmt!(\"Vector.x,y,z,w:    %d = %d\", vfield_avg as int, (vfield_avg - min) as int));\n  112:     io::println(fmt!(\"VecMatch[i]:       %d = %d\", vindex_avg as int, (vindex_avg - min) as int));\n  113:     io::println(fmt!(\"VecReinterpret[i]: %d = %d\", vreint_avg as int, (vreint_avg - min) as int));\n  114:     io::println(fmt!(\"VecTransmute[i]:   %d = %d\", vtrans_avg as int, (vtrans_avg - min) as int));\n  115:     io::println(fmt!(\"VecBufSlice[i]:    %d = %d\", vbufslice_avg as int, (vbufslice_avg - min) as int));\n  116  }\n  117  \n\n/Users/kvark/Code/rust/lmath-rs/src/test/performance/vector_map_fold.rs:\n  134      let min = [mul_t_avg, mul_t_map_avg].min();\n  135      \n  136:     io::println(fmt!(\"mul_t:        %d = %d\", mul_t_avg as int, (mul_t_avg - min) as int));\n  137:     io::println(fmt!(\"mul_t_map:    %d = %d\", mul_t_map_avg as int, (mul_t_map_avg - min) as int));\n  138      \n  139      // Zip\n  ...\n  149      let min = [add_v_avg, add_v_map2_avg].min();\n  150      \n  151:     io::println(fmt!(\"add_v:        %d = %d\", add_v_avg as int, (add_v_avg - min) as int));\n  152:     io::println(fmt!(\"add_v_map2:    %d = %d\", add_v_map2_avg as int, (add_v_map2_avg - min) as int));\n  153      \n  154      // Dot\n  ...\n  164      let min = [dot_avg, dot_foldl_avg].min();\n  165      \n  166:     io::println(fmt!(\"dot:        %d = %d\", dot_avg as int, (dot_avg - min) as int));\n  167:     io::println(fmt!(\"dot_foldl:  %d = %d\", dot_foldl_avg as int, (dot_foldl_avg - min) as int));\n  168      \n  169  }\n\n41 matches across 12 files\n",
			"settings":
			{
				"buffer_size": 8997,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "/Users/kvark/Code/rust/claymore-game/game/main.rs",
			"settings":
			{
				"buffer_size": 11623,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/kvark/Code/rust/claymore-game/game/hud.rs",
			"settings":
			{
				"buffer_size": 12721,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/kvark/Code/rust/claymore-game/game/claymore.rc",
			"settings":
			{
				"buffer_size": 344,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/kvark/Code/rust/claymore-game/engine/engine.rc",
			"settings":
			{
				"buffer_size": 444,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/kvark/Code/rust/claymore-game/engine/context.rs",
			"settings":
			{
				"buffer_size": 5147,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/kvark/Code/rust/claymore-game/engine/load.rs",
			"settings":
			{
				"buffer_size": 10423,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/kvark/Code/rust/claymore-game/engine/draw.rs",
			"settings":
			{
				"buffer_size": 5430,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/kvark/Code/rust/claymore-game/game/battle.rs",
			"settings":
			{
				"buffer_size": 6847,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/kvark/Code/rust/claymore-game/game/grid.rs",
			"settings":
			{
				"buffer_size": 4656,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/kvark/Code/rust/claymore-game/data/config.json",
			"settings":
			{
				"buffer_size": 231,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/kvark/Code/rust/claymore-game/engine/shade.rs",
			"settings":
			{
				"buffer_size": 13118,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/kvark/Code/rust/claymore-game/engine/font.rs",
			"settings":
			{
				"buffer_size": 8029,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/kvark/Code/rust/claymore-game/engine/audio.rs",
			"settings":
			{
				"buffer_size": 4117,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"",
				"Build: Build"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 125.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/kvark/Code/rust/claymore-game/engine/space.rs",
		"/Users/kvark/Code/rust/lmath-rs/src/mat4.rs",
		"/Users/kvark/Code/rust/claymore-game/engine/load.rs",
		"/Users/kvark/Code/rust/claymore-game/engine/texture.rs",
		"/Users/kvark/Code/rust/claymore-game/engine/audio.rs",
		"/Users/kvark/Code/rust/claymore-game/engine/call.rs",
		"/Users/kvark/Code/rust/claymore-game/engine/shade.rs",
		"/Users/kvark/Code/rust/claymore-game/engine/engine.rc",
		"/Users/kvark/Code/rust/rust-freetype/freetype.rs",
		"/Users/kvark/Code/rust/claymore-game/engine/font.rs",
		"/Users/kvark/Code/rust/claymore-game/game/claymore.rc",
		"/Users/kvark/Code/rust/claymore-game/game/grid.rs",
		"/Users/kvark/Code/rust/claymore-game/game/scene.rs",
		"/Users/kvark/Code/rust/claymore-game/game/hud.rs",
		"/Users/kvark/Code/rust/claymore-game/game/battle.rs",
		"/Users/kvark/Code/rust/claymore-game/game/main.rs",
		"/Users/kvark/Code/rust/claymore-game/util/claymore",
		"/Users/kvark/Code/rust/claymore-game/Makefile",
		"/Users/kvark/Code/rust/lmath-rs/src/gltypes.rs",
		"/Users/kvark/Code/rust/claymore-game/engine/draw.rs",
		"/Users/kvark/Code/rust/claymore-game/engine/frame.rs",
		"/Users/kvark/Code/rust/claymore-game/engine/mesh.rs",
		"/Users/kvark/Code/rust/claymore-game/engine/rast.rs",
		"/Users/kvark/Code/rust/claymore-game/data/hud/char.json",
		"/Users/kvark/Code/rust/claymore-game/engine/context.rs",
		"/Users/kvark/Code/rust/claymore-game/data/hud/char-orig.json",
		"/Users/kvark/Code/rust/claymore-game/data/config.json",
		"/Users/kvark/Code/rust/lmath-rs/src/angle.rs",
		"/Users/kvark/Code/rust/claymore-game/data/code-game/char/armor.glslv",
		"/Users/kvark/Code/rust/claymore-game/data/sound/stereol.wav",
		"/Users/kvark/Code/rust/claymore-game/data/sound/panther.wav",
		"/Users/kvark/Code/rust/claymore-game/data/code-game/char/armor.glslf",
		"/Users/kvark/Code/rust/claymore-game/.hgignore",
		"/Users/kvark/Code/rust/claymore-game/data/code/hud/image.glslv",
		"/Users/kvark/Code/rust/claymore-game/data/code/hud/image.glslf",
		"/Users/kvark/Code/rust/claymore-game/data/code/hud/debug.glslv",
		"/Users/kvark/Code/rust/claymore-game/data/code/hud/debug.glslf",
		"/Users/kvark/Code/rust/claymore-game/data/code-game/envir.glslf",
		"/Users/kvark/Code/rust/claymore-game/data/code-game/envir.glslv",
		"/Users/kvark/Code/rust/claymore-game/data/claymore-2.json",
		"/Users/kvark/Code/rust/claymore-game/data/claymore-2.mat.json",
		"/Users/kvark/Code/rust/rust-stb-image/image.rs",
		"/Users/kvark/Code/rust/claymore-game/data/code-game/char/envir.glslf",
		"/Users/kvark/Code/rust/claymore-game/data/code-game/char/skin.glslv",
		"/Users/kvark/Code/rust/claymore-game/data/code-game/char/skin.glslf",
		"/Users/kvark/Code/rust/claymore-game/data/code-game/char/hair.glslv",
		"/Users/kvark/Code/rust/claymore-game/data/code-game/char/hair.glslf",
		"/Users/kvark/Code/rust/claymore-game/data/code/mat/test.glslv",
		"/Users/kvark/Code/rust/claymore-game/data/code-game/char-armor.glslf",
		"/Users/kvark/Code/rust/claymore-game/data/code-game/char-armor.glslv",
		"/Users/kvark/Code/rust/claymore-game/data/code/mat/phong_tangent.glslv",
		"/Users/kvark/Code/rust/claymore-game/data/code-game/char-skin.glslv",
		"/Users/kvark/Code/rust/claymore-game/util/blender/io_kri_scene/scene.py",
		"/Users/kvark/Code/rust/claymore-game/util/blender/io_kri_mesh/mesh.py",
		"/Users/kvark/Code/rust/claymore-game/data/code-game/char-skin.glslf",
		"/Users/kvark/Code/rust/claymore-game/data/code/mat/flat.glslv",
		"/Users/kvark/Code/rust/claymore-game/data/code/mat/flat.glslf",
		"/Users/kvark/Code/rust/claymore-game/data/code/../claymore-2.mat.json",
		"/Users/kvark/Code/rust/claymore-game/util/blender/io_kri_scene/__init__.py",
		"/Users/kvark/Code/rust/claymore-game/util/blender/io_kri/action.py",
		"/Users/kvark/Code/rust/claymore-game/util/blender/io_kri/common.py",
		"/Users/kvark/Code/rust/claymore-game/util/blender/io_kri_arm/__init__.py",
		"/Users/kvark/Code/rust/claymore-game/util/blender/io_kri_mesh/__init__.py",
		"/Users/kvark/Code/rust/claymore-game/util/blender/io_kri_arm/arm.py",
		"/Users/kvark/Code/rust/claymore-game/data/object/scene.json",
		"/Users/kvark/Code/rust/claymore-game/data/code/mat/phong.glslv",
		"/Users/kvark/Code/rust/claymore-game/test.rs",
		"/Users/kvark/Code/rust/claymore-game/data/object",
		"/Users/kvark/Code/rust/openal-rs/src/al.rs",
		"/Users/kvark/Code/rust/openal-rs/src/alc.rs",
		"/Users/kvark/Code/rust/claymore-game/engine/buf.rs",
		"/Users/kvark/Code/rust/openal-rs/src/openal.rc",
		"/Users/kvark/Code/rust/claymore-game/sample/demo05-text.rs",
		"/Users/kvark/Code/rust/claymore-game/data/code/hud/text_bubble.glslf",
		"/Users/kvark/Code/rust/claymore-game/data/code/hud/text_bubble.glslv",
		"/Users/kvark/Code/rust/claymore-game/data/code/hud/text.glslf",
		"/Users/kvark/Code/rust/claymore-game/data/code/hud/text.glslv",
		"/Users/kvark/Code/rust/claymore-game/data/code/hud",
		"/Users/kvark/Code/rust/claymore-game/data/code-game/grid.glslf",
		"/Users/kvark/Library/Application Support/Sublime Text 2/Packages/User/Preferences.sublime-settings",
		"/Users/kvark/Code/rust/claymore-game/data/code-game/grid.glslv",
		"/Users/kvark/Code/rust/claymore-game/data/code/tech/forward/sub.glslv",
		"/Users/kvark/Code/rust/claymore-game/data/code/tech/forward/sun.glslf",
		"/Users/kvark/Code/rust/claymore-game/data/code/tech/forward/sun.glslv",
		"/Users/kvark/Code/rust/claymore-game/data/code/tech/forward/light.glslf",
		"/Users/kvark/Code/rust/claymore-game/data/code/tech/forward/light.glslv",
		"/Users/kvark/Code/rust/claymore-game/sample/demo04-skeleton.rs",
		"/Users/kvark/Code/rust/claymore-game/data/code/mat/fresnel.glslv",
		"/Users/kvark/Code/claymore-game/game/main.rs",
		"/Users/kvark/Code/claymore-game/engine/space.rs",
		"/Users/kvark/Code/claymore-game/engine/load.rs",
		"/Users/kvark/Code/claymore-game/data/code/mod/arm.glslv",
		"/Users/kvark/Code/claymore-game/data/code/tech/omni1.glslf",
		"/Users/kvark/Code/claymore-game/data/code/mat/phong.glslf",
		"/Users/kvark/Code/claymore-game/data/code/mat/phong.glslv",
		"/Users/kvark/Code/claymore-game/engine/shade.rs",
		"/Users/kvark/Code/claymore-game/Makefile",
		"/Users/kvark/Code/claymore-game/data/code/mod/arm_dualquat.glslv",
		"/Users/kvark/Code/claymore-game/engine/draw.rs",
		"/Users/kvark/Code/claymore-game/data/code/mat/fresnel.glslv",
		"/Users/kvark/Code/claymore-game/data/code/mat/phong_tangent.glslv",
		"/Users/kvark/Code/claymore-game/data/code/mat/test.glslv",
		"/Users/kvark/Code/claymore-game/engine/anim.rs",
		"/Users/kvark/Code/claymore-game/engine/rast.rs",
		"/Users/kvark/Code/claymore-game/engine/frame.rs",
		"/Users/kvark/Code/claymore-game/sample",
		"/Users/kvark/Code/claymore-game/engine/mesh.rs",
		"/Users/kvark/Code/claymore-game/engine/buf.rs",
		"/Users/kvark/Code/claymore-game/game/demo03-materials.rs",
		"/Users/kvark/Code/claymore-game/data/code/mat/phong_tangent.glslf",
		"/Users/kvark/Code/claymore-game/data/code/mat/fresnel.glslf",
		"/Users/kvark/Code/claymore-game/misc/io_kri_mesh/mesh.py",
		"/Users/kvark/Code/claymore-game/data/code/tech/omni1.glslv",
		"/Users/kvark/Code/claymore-game/data/code/tech/test.glslf",
		"/Users/kvark/Code/claymore-game/data/code/tech/test.glslv",
		"/Users/kvark/Code/claymore-game/data/code/mat/test.glslf",
		"/Users/kvark/Code/claymore-game/data/code/test.glslf",
		"/Users/kvark/Code/claymore-game/game/brick.rs",
		"/Users/kvark/Code/claymore-game/data/code/test.glslv",
		"/Users/kvark/Code/claymore-game/.hgignore",
		"/Users/kvark/Code/claymore-game/data/code/mat/phong_fresnel.glslv",
		"/Users/kvark/Code/kri-web/proj/draw.dart",
		"/Users/kvark/Code/claymore-game/engine/engine.rc",
		"/Users/kvark/Code/claymore-game/engine/call.rs",
		"/Users/kvark/Code/claymore-game/data/code/tech/main.glslv",
		"/Users/kvark/Code/claymore-game/data/code/tech/main.glslf",
		"/Users/kvark/Code/kri-web/proj/rast.dart",
		"/Users/kvark/Code/claymore-game/engine/texture.rs"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"println",
			"add",
			"println",
			"Group size",
			"180f",
			"auto_decode",
			"auto_deserialize",
			"to_gl_type",
			"lmath",
			"vec3",
			"lmath",
			"GLType",
			"fail",
			"#[deriv",
			"#[deriving_eq]",
			"center",
			"not a list",
			"\"not a list\"",
			"not a list",
			"create_reader",
			"NAME_SIZE",
			"alBuffer",
			"0u",
			"iter_bytes",
			"margin",
			"&(",
			"get_corner",
			"Camera",
			"    ",
			"load_technique",
			"u_CameraPos",
			"Pi",
			"Unable to find meta",
			"groups",
			"Unable to find curve",
			"face_num",
			"out.stop",
			"out.log",
			"save_matrix",
			"save_color",
			"out = Writer.inst = Writer(filename)",
			"inst",
			"extens",
			"Writer.inst",
			"mesh",
			"to_vec",
			"spawn",
			"@engine::draw::load_material( copy imat.code_path );",
			"unsafe",
			"{\n",
			"unsafe",
			"fail",
			"unsafe",
			"\n		",
			"unsafe",
			"addr_of",
			"add_of",
			"unsafe",
			"kFrameSec",
			"framerate",
			"kFrameSec",
			"min_x",
			"max_x",
			"face.offset",
			"face.off",
			"fail",
			"64f",
			"vt",
			"fail",
			"debug",
			"fail",
			"6u",
			"a_Vertex",
			"unsafe",
			"as @",
			"filepath",
			"save_me",
			"int\ncreate_stencil",
			"int",
			" \n",
			"make_rect",
			"trait",
			"glcore",
			"View vector",
			"create_mesh",
			"LinearMap",
			"range",
			"bind_pose",
			"lerp",
			"glCreateShader",
			"sync_back",
			"));",
			"lmath",
			"self.node",
			"a_Normal",
			"used_meta",
			"u_PosCam",
			"substr",
			"iter_bytes",
			"GLint",
			"cache.",
			"self",
			",\n",
			"to_ptr",
			"Vec3",
			"==",
			"*handle",
			");\n",
			"HashMap",
			"LinearMap",
			"my_val",
			"size_of",
			"sizeof"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"auto_decode",
			"log.stop",
			"log.log",
			"self.",
			"new"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 6,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/Users/kvark/Code/rust/claymore-game/game/scene.rs",
					"settings":
					{
						"buffer_size": 12522,
						"regions":
						{
						},
						"selection":
						[
							[
								8420,
								8420
							]
						],
						"settings":
						{
							"glsv_configured": true,
							"glsv_enabled": 1.0,
							"glsv_spec": 0.0,
							"syntax": "Packages/Rust/Rust.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5073.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"settings":
					{
						"buffer_size": 8997,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										283,
										293
									],
									[
										678,
										685
									],
									[
										806,
										813
									],
									[
										1049,
										1056
									],
									[
										1377,
										1384
									],
									[
										1673,
										1680
									],
									[
										1888,
										1895
									],
									[
										2118,
										2125
									],
									[
										2409,
										2416
									],
									[
										2694,
										2701
									],
									[
										2958,
										2965
									],
									[
										3130,
										3137
									],
									[
										3405,
										3412
									],
									[
										3640,
										3647
									],
									[
										3859,
										3866
									],
									[
										4080,
										4087
									],
									[
										4244,
										4251
									],
									[
										4330,
										4337
									],
									[
										4370,
										4377
									],
									[
										4594,
										4601
									],
									[
										4798,
										4805
									],
									[
										4974,
										4981
									],
									[
										5240,
										5247
									],
									[
										5596,
										5603
									],
									[
										5772,
										5779
									],
									[
										6054,
										6061
									],
									[
										6230,
										6237
									],
									[
										6549,
										6556
									],
									[
										6689,
										6696
									],
									[
										7014,
										7021
									],
									[
										7186,
										7193
									],
									[
										7451,
										7458
									],
									[
										7557,
										7564
									],
									[
										7663,
										7670
									],
									[
										7769,
										7776
									],
									[
										7875,
										7882
									],
									[
										8145,
										8152
									],
									[
										8244,
										8251
									],
									[
										8455,
										8462
									],
									[
										8554,
										8561
									],
									[
										8765,
										8772
									],
									[
										8858,
										8865
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								474,
								474
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"glsv_configured": true,
							"glsv_enabled": 1.0,
							"glsv_spec": 0.0,
							"output_tag": 2,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 187.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/Users/kvark/Code/rust/claymore-game/game/main.rs",
					"settings":
					{
						"buffer_size": 11623,
						"regions":
						{
						},
						"selection":
						[
							[
								9659,
								9659
							]
						],
						"settings":
						{
							"glsv_configured": true,
							"glsv_enabled": 1.0,
							"glsv_spec": 0.0,
							"syntax": "Packages/Rust/Rust.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5112.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/Users/kvark/Code/rust/claymore-game/game/hud.rs",
					"settings":
					{
						"buffer_size": 12721,
						"regions":
						{
						},
						"selection":
						[
							[
								10413,
								10413
							]
						],
						"settings":
						{
							"glsv_configured": true,
							"glsv_enabled": 1.0,
							"glsv_spec": 0.0,
							"syntax": "Packages/Rust/Rust.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 6286.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/Users/kvark/Code/rust/claymore-game/game/claymore.rc",
					"settings":
					{
						"buffer_size": 344,
						"regions":
						{
						},
						"selection":
						[
							[
								275,
								275
							]
						],
						"settings":
						{
							"glsv_configured": true,
							"glsv_enabled": 1.0,
							"glsv_spec": 0.0,
							"syntax": "Packages/Rust/Rust.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/Users/kvark/Code/rust/claymore-game/engine/engine.rc",
					"settings":
					{
						"buffer_size": 444,
						"regions":
						{
						},
						"selection":
						[
							[
								219,
								219
							]
						],
						"settings":
						{
							"glsv_configured": true,
							"glsv_enabled": 1.0,
							"glsv_spec": 0.0,
							"syntax": "Packages/Rust/Rust.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/Users/kvark/Code/rust/claymore-game/engine/context.rs",
					"settings":
					{
						"buffer_size": 5147,
						"regions":
						{
						},
						"selection":
						[
							[
								4764,
								4764
							]
						],
						"settings":
						{
							"glsv_configured": true,
							"glsv_enabled": 1.0,
							"glsv_spec": 0.0,
							"syntax": "Packages/Rust/Rust.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2553.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/Users/kvark/Code/rust/claymore-game/engine/load.rs",
					"settings":
					{
						"buffer_size": 10423,
						"regions":
						{
						},
						"selection":
						[
							[
								3166,
								3166
							]
						],
						"settings":
						{
							"glsv_configured": true,
							"glsv_enabled": 1.0,
							"glsv_spec": 0.0,
							"syntax": "Packages/Rust/Rust.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2011.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/Users/kvark/Code/rust/claymore-game/engine/draw.rs",
					"settings":
					{
						"buffer_size": 5430,
						"regions":
						{
						},
						"selection":
						[
							[
								3568,
								3568
							]
						],
						"settings":
						{
							"glsv_configured": true,
							"glsv_enabled": 1.0,
							"glsv_spec": 0.0,
							"syntax": "Packages/Rust/Rust.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1798.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/Users/kvark/Code/rust/claymore-game/game/battle.rs",
					"settings":
					{
						"buffer_size": 6847,
						"regions":
						{
						},
						"selection":
						[
							[
								6533,
								6533
							]
						],
						"settings":
						{
							"glsv_configured": true,
							"glsv_enabled": 1.0,
							"glsv_spec": 0.0,
							"syntax": "Packages/Rust/Rust.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3198.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/Users/kvark/Code/rust/claymore-game/game/grid.rs",
					"settings":
					{
						"buffer_size": 4656,
						"regions":
						{
						},
						"selection":
						[
							[
								4520,
								4520
							]
						],
						"settings":
						{
							"glsv_configured": true,
							"glsv_enabled": 1.0,
							"glsv_spec": 0.0,
							"syntax": "Packages/Rust/Rust.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1438.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/Users/kvark/Code/rust/claymore-game/data/config.json",
					"settings":
					{
						"buffer_size": 231,
						"regions":
						{
						},
						"selection":
						[
							[
								226,
								226
							]
						],
						"settings":
						{
							"glsv_configured": true,
							"glsv_enabled": 1.0,
							"glsv_spec": 0.0,
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "/Users/kvark/Code/rust/claymore-game/engine/shade.rs",
					"settings":
					{
						"buffer_size": 13118,
						"regions":
						{
						},
						"selection":
						[
							[
								7913,
								7913
							]
						],
						"settings":
						{
							"glsv_configured": true,
							"glsv_enabled": 1.0,
							"glsv_spec": 0.0,
							"syntax": "Packages/Rust/Rust.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3929.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "/Users/kvark/Code/rust/claymore-game/engine/font.rs",
					"settings":
					{
						"buffer_size": 8029,
						"regions":
						{
						},
						"selection":
						[
							[
								5332,
								5332
							]
						],
						"settings":
						{
							"glsv_configured": true,
							"glsv_enabled": 1.0,
							"glsv_spec": 0.0,
							"syntax": "Packages/Rust/Rust.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 122.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "/Users/kvark/Code/rust/claymore-game/engine/audio.rs",
					"settings":
					{
						"buffer_size": 4117,
						"regions":
						{
						},
						"selection":
						[
							[
								2786,
								2786
							]
						],
						"settings":
						{
							"glsv_configured": true,
							"glsv_enabled": 1.0,
							"glsv_spec": 0.0,
							"syntax": "Packages/Rust/Rust.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2039.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 163.0
	},
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 216.0,
	"status_bar_visible": true
}
